/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/main'
import { Route as DashboardLayoutRouteImport } from './routes/_dashboardLayout/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardLayoutOrdersImport } from './routes/_dashboardLayout/orders'
import { Route as DashboardLayoutDashboardImport } from './routes/_dashboardLayout/dashboard'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRouteRoute = DashboardLayoutRouteImport.update({
  id: '/_dashboardLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutOrdersRoute = DashboardLayoutOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => DashboardLayoutRouteRoute,
} as any)

const DashboardLayoutDashboardRoute = DashboardLayoutDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardLayoutRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_dashboardLayout': {
      id: '/_dashboardLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/_dashboardLayout/dashboard': {
      id: '/_dashboardLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutDashboardImport
      parentRoute: typeof DashboardLayoutRouteImport
    }
    '/_dashboardLayout/orders': {
      id: '/_dashboardLayout/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof DashboardLayoutOrdersImport
      parentRoute: typeof DashboardLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardLayoutRouteRouteChildren {
  DashboardLayoutDashboardRoute: typeof DashboardLayoutDashboardRoute
  DashboardLayoutOrdersRoute: typeof DashboardLayoutOrdersRoute
}

const DashboardLayoutRouteRouteChildren: DashboardLayoutRouteRouteChildren = {
  DashboardLayoutDashboardRoute: DashboardLayoutDashboardRoute,
  DashboardLayoutOrdersRoute: DashboardLayoutOrdersRoute,
}

const DashboardLayoutRouteRouteWithChildren =
  DashboardLayoutRouteRoute._addFileChildren(DashboardLayoutRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardLayoutRouteRouteWithChildren
  '/main': typeof MainRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard': typeof DashboardLayoutDashboardRoute
  '/orders': typeof DashboardLayoutOrdersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardLayoutRouteRouteWithChildren
  '/main': typeof MainRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard': typeof DashboardLayoutDashboardRoute
  '/orders': typeof DashboardLayoutOrdersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_dashboardLayout': typeof DashboardLayoutRouteRouteWithChildren
  '/main': typeof MainRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_dashboardLayout/dashboard': typeof DashboardLayoutDashboardRoute
  '/_dashboardLayout/orders': typeof DashboardLayoutOrdersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/main'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/orders'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/main' | '/login' | '/signup' | '/dashboard' | '/orders'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_dashboardLayout'
    | '/main'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_dashboardLayout/dashboard'
    | '/_dashboardLayout/orders'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardLayoutRouteRoute: typeof DashboardLayoutRouteRouteWithChildren
  MainRoute: typeof MainRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardLayoutRouteRoute: DashboardLayoutRouteRouteWithChildren,
  MainRoute: MainRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_dashboardLayout",
        "/main"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/login",
        "/_auth/signup"
      ]
    },
    "/_dashboardLayout": {
      "filePath": "_dashboardLayout/route.tsx",
      "children": [
        "/_dashboardLayout/dashboard",
        "/_dashboardLayout/orders"
      ]
    },
    "/main": {
      "filePath": "main.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_dashboardLayout/dashboard": {
      "filePath": "_dashboardLayout/dashboard.tsx",
      "parent": "/_dashboardLayout"
    },
    "/_dashboardLayout/orders": {
      "filePath": "_dashboardLayout/orders.tsx",
      "parent": "/_dashboardLayout"
    }
  }
}
ROUTE_MANIFEST_END */
